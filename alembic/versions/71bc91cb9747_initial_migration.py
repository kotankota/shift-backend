"""Initial migration

Revision ID: 71bc91cb9747
Revises: 
Create Date: 2024-10-03 03:37:55.596775

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import Session
from app.models import User, DailyConstraint
import uuid
import datetime

# revision identifiers, used by Alembic.
revision: str = '71bc91cb9747'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_constraints',
    sa.Column('id', sa.String(), nullable=False, default=lambda: str(uuid.uuid4())),
    sa.Column('date', sa.Date(), nullable=False, unique=True),
    sa.Column('min_employees', sa.Integer(), nullable=False),
    sa.Column('max_employees', sa.Integer(), nullable=False),
    sa.Column('is_holiday', sa.Boolean(), nullable=True, default=False),
    sa.Column('created_at', sa.DateTime(), nullable=True, default=datetime.datetime.now(datetime.timezone.utc)),
    sa.Column('updated_at', sa.DateTime(), nullable=True, default=datetime.datetime.now(datetime.timezone.utc), onupdate=datetime.datetime.now(datetime.timezone.utc)),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False, default=lambda: str(uuid.uuid4())),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False, unique=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=True, default="employee"),
    sa.Column('created_at', sa.DateTime(), nullable=True, default=datetime.datetime.now(datetime.timezone.utc)),
    sa.Column('updated_at', sa.DateTime(), nullable=True, default=datetime.datetime.now(datetime.timezone.utc), onupdate=datetime.datetime.now(datetime.timezone.utc)),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('availabilities',
    sa.Column('id', sa.String(), nullable=False, default=lambda: str(uuid.uuid4())),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=True, default=True),
    sa.Column('created_at', sa.DateTime(), nullable=True, default=datetime.datetime.now(datetime.timezone.utc)),
    sa.Column('updated_at', sa.DateTime(), nullable=True, default=datetime.datetime.now(datetime.timezone.utc), onupdate=datetime.datetime.now(datetime.timezone.utc)),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedules',
    sa.Column('id', sa.String(), nullable=False, default=lambda: str(uuid.uuid4())),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('assigned', sa.Boolean(), nullable=True, default=False),
    sa.Column('created_at', sa.DateTime(), nullable=True, default=datetime.datetime.now(datetime.timezone.utc)),
    sa.Column('updated_at', sa.DateTime(), nullable=True, default=datetime.datetime.now(datetime.timezone.utc), onupdate=datetime.datetime.now(datetime.timezone.utc)),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

    # 初期データの挿入
    bind = op.get_bind()
    session = Session(bind=bind)

    # ユーザーの初期データを定義
    users = [
        User(id="1", name="Admin User", email="admin@example.com", hashed_password="$2b$12$QU4phCxcPsAksVLHap3JveJrK1HJ0aqhiDC7PnLPs6BpmTW0Bm/ta", role="admin"),
    ]
    

    # 初期データをセッションに追加
    session.add_all(users)
    
    # データベースにコミット
    session.commit()


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('schedules')
    op.drop_table('availabilities')
    op.drop_table('users')
    op.drop_table('daily_constraints')
    # ### end Alembic commands ###
